Emulator
DATA SEGMENT
MSG1 DB 10,13,'enter string:$'
MSG2 DB 10,13,'string is palindrome$'
MSG3 DB 10,13,'string is not palindrome$'
STR1 DB 50 DUP(?)
DATA ENDS

CODE SEGMENT
ASSUME CS:CODE,DS:DATA
START:
MOV AX,DATA
MOV DS,AX
LEA DX,MSG1
MOV AH,09H
INT 21H

LEA SI,STR1
LEA DI,STR1
MOV AH,01H

NEXT:
INT 21H
CMP AL,0DH
JE TERMINATE
MOV [DI],AL
INC DI
JMP NEXT

TERMINATE:
MOV AL,'$'
MOV [DI],AL

DOTHIS:
DEC DI
MOV AL,[SI]
CMP [DI],AL
JNE NOTPAL
INC SI
CMP SI,DI
JL DOTHIS

PAL:
MOV AH,09H
LEA DX,MSG2
INT 21H
JMP XX

NOTPAL:
MOV AH,09H
LEA DX,MSG3
INT 21H

XX:
MOV AH,4CH
INT 21H

CODE ENDS
END START

SORTING
DATA SEGMENT
ARRAY DW 0050H,0024H,0001H,0020H,0030H
LEN   DW 5
DATA ENDS

CODE SEGMENT
ASSUME CS:CODE, DS:DATA
START:
    MOV AX, DATA
    MOV DS, AX

    ; Bubble sort
    MOV CX, [LEN]
    DEC CX
OUTER:
    PUSH CX
    MOV SI, 0
    MOV DX, CX
INNER:
    MOV AX, [ARRAY + SI]
    MOV BX, [ARRAY + SI + 2]
    CMP AX, BX
    JBE NOSWAP
    XCHG AX, BX
    MOV [ARRAY + SI], AX
    MOV [ARRAY + SI + 2], BX
NOSWAP:
    ADD SI, 2
    DEC DX
    JNZ INNER
    POP CX
    DEC CX
    JNZ OUTER

    ; Print sorted array
    MOV CX, [LEN]
    MOV SI, 0
PRINT_LOOP:
    MOV AX, [ARRAY + SI]
    CALL PRINT_NUM
    ADD SI, 2
    LOOP PRINT_LOOP

    MOV AH, 4CH
    INT 21H

;---------------------------------------
; Print 16-bit number in decimal
; Input: AX = number
PRINT_NUM PROC
    PUSH AX
    PUSH BX
    PUSH CX
    PUSH DX

    MOV CX, 0         ; Digit counter
    MOV BX, 10
DIV_LOOP:
    XOR DX, DX
    DIV BX
    PUSH DX
    INC CX
    CMP AX, 0
    JNE DIV_LOOP

PRINT_DIGITS:
    POP DX
    ADD DL, '0'
    MOV AH, 02H
    INT 21H
    LOOP PRINT_DIGITS

    ; Print space
    MOV DL, ' '
    MOV AH, 02H
    INT 21H

    POP DX
    POP CX
    POP BX
    POP AX
    RET
PRINT_NUM ENDP

CODE ENDS
END START














